{"mappings":"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","sources":["src/ConfigContext.tsx","src/Label.tsx","src/Toggle.tsx","src/FormField.tsx","src/MaxLength.tsx","src/TextField.tsx","src/TextAreaField.tsx","src/FormItem.tsx","src/DateField.tsx","src/NumberField.tsx","src/TelephoneField.tsx","src/Button.tsx","src/UploadField.tsx","src/Fieldset.tsx","src/ComplexMultipleField.tsx","src/SelectField.tsx","src/ChoiceField.tsx","src/Field.tsx","src/ButtonRow.tsx","src/Heading.tsx","src/Form.tsx","src/utils.ts","src/ApplicationForm.tsx"],"sourcesContent":["import React = require(\"react\");\n\nexport const DEFAULT_FORM_CONFIG: FormConfigType = {\n  telephoneInitialCountry: \"US\",\n  telephonePreferredCountries: [\"us\", \"gb\", \"ca\", \"de\", \"au\"],\n  telephoneAllowDropdown: true,\n  telephoneAutoHideDialCode: false,\n  telephoneAutoPlaceholder: \"polite\",\n  telephoneCustomContainer: \"\",\n  telephoneCustomPlaceholder: null,\n  telephoneDropdownContainer: null,\n  telephoneExcludeCountries: [],\n  telephoneFormatOnDisplay: true,\n  telephoneGeoIpLookup: null,\n  telephoneHiddenInput: \"\",\n  telephoneLocalizedCountries: null,\n  telephoneNationalMode: false,\n  telephoneOnlyCountries: [],\n  telephonePlaceholderNumberType: \"MOBILE\",\n  telephoneSeparateDialCode: true,\n\n  // labels\n  labelForm: \"Application\",\n  labelSubmit: \"Submit application\",\n  labelAdd: \"Add\",\n  labelSave: \"Save\",\n  labelCancel: \"Cancel\",\n  labelEdit: \"Edit\",\n  labelDelete: \"Delete\",\n  labelClose: \"Close\",\n  labelOptional: \"(optional)\",\n  labelClear: \"Clear\",\n\n  // dropzone\n  labelDropzoneUpload: \"Upload a file\",\n  labelDropzoneDragDrop: \"or drag and drop here\",\n  labelDropzoneMaxSize: \"Max file size is \",\n  labelDropzoneAcceptableFileTypes: \"Acceptable file types: \",\n  labelDropzoneReplaceFile: \"Replace file\",\n  labelDropzoneNoFilesAccepted: \"No files accepted\",\n  labelDropzoneAborted: \"File reading was aborted\",\n  labelDropzoneError: \"File reading has failed\",\n\n  // icons\n  iconCancel: () => (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n    >\n      <path\n        d=\"M7.7574 7.7574 12 12.0001m0 0 4.2426 4.2426M12 12.0001l4.2426-4.2427M12 12.0001l-4.2426 4.2426\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n    </svg>\n  ),\n  iconCheck: () => (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n    >\n      <path\n        d=\"M6.5 12.5 10 16l7.5-7.5\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n    </svg>\n  ),\n  iconEdit: () => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={24}\n      height={24}\n    >\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        d=\"M9 6.75H4.75v12.5h12.5V15\"\n      ></path>\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        d=\"M17.5 4.25l-7.25 7.25v2.75H13l7.24-7.26 -2.75-2.75Z\"\n      ></path>\n    </svg>\n  ),\n  iconDelete: () => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={24}\n      height={24}\n    >\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        d=\"M7.25 7.75h9.5m-9.5 0v10.5h9.5V7.75m-9.5 0H5m11.75 0H19m-4.75 0v-3h-4.5v3\"\n      ></path>\n    </svg>\n  ),\n  iconClear: () => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={24}\n      height={24}\n    >\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        d=\"M7.25 7.75h9.5m-9.5 0v10.5h9.5V7.75m-9.5 0H5m11.75 0H19m-4.75 0v-3h-4.5v3\"\n      ></path>\n    </svg>\n  ),\n};\n\nexport const ConfigContext = React.createContext(DEFAULT_FORM_CONFIG);\n","import React = require(\"react\");\nimport { ConfigContext } from \"./ConfigContext\";\n\ntype LabelProps = {\n  label: React.ReactElement | React.ReactNode;\n  id: string;\n  required: boolean;\n};\n\nexport const Label: React.ComponentType<LabelProps> = ({\n  label,\n  required,\n  id,\n}) => {\n  const config = React.useContext(ConfigContext);\n\n  return (\n    <div className=\"form-label-wrapper\">\n      <label className=\"form-label\" htmlFor={`workable-${id}`}>\n        {label}\n        {required ? (\n          <span className=\"form-label__required\">*</span>\n        ) : (\n          <span className=\"form-label__optional\">{config.labelOptional}</span>\n        )}\n      </label>\n    </div>\n  );\n};\n","import { useContext } from \"react\";\nimport { Label } from \"./Label\";\nimport { ConfigContext } from \"./ConfigContext\";\n\nexport const Toggle: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  label,\n  defaultValue,\n}) => {\n  const config = useContext(ConfigContext);\n  return (\n    <div className=\"toggle-wrapper\">\n      <div className=\"toggle\">\n        <input\n          type=\"checkbox\"\n          name={id}\n          required={required}\n          id={`workable-${id}`}\n          className=\"toggle__input\"\n          defaultChecked={Boolean(defaultValue)}\n        />\n        <span className=\"toggle__check\">{config.iconCheck()}</span>\n      </div>\n\n      <Label label={label} id={id} required={required} />\n    </div>\n  );\n};\n","type FormFieldProps = {\n  children: React.ReactNode;\n};\n\nexport const FormField: React.ComponentType<FormFieldProps> = ({\n  children,\n}) => {\n  return (\n    <div className=\"form-field\">\n      <div className=\"form-field__wrapper\">{children}</div>\n    </div>\n  );\n};\n","type MaxLengthProps = {\n  count?: number;\n  maxLength?: number;\n};\n\nexport const MaxLength = ({ count = 0, maxLength }) => {\n  if (!maxLength) return null;\n\n  return (\n    <span className=\"form-field__maxlength\">\n      {count} / {maxLength}\n    </span>\n  );\n};\n","import { useState } from \"react\";\nimport { FormField } from \"./FormField\";\nimport { MaxLength } from \"./MaxLength\";\n\nexport const TextField: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  defaultValue,\n  maxLength,\n}) => {\n  const [value, setValue] = useState<string>(null);\n\n  return (\n    <FormField>\n      <input\n        type=\"text\"\n        name={id}\n        required={required}\n        id={`workable-${id}`}\n        defaultValue={defaultValue}\n        className=\"form-field__text\"\n        maxLength={maxLength}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setValue(e.target.value)\n        }\n      />\n      <MaxLength count={value?.length} maxLength={maxLength} />\n    </FormField>\n  );\n};\n","import { useState } from \"react\";\nimport { FormField } from \"./FormField\";\n\nimport { MaxLength } from \"./MaxLength\";\n\nexport const TextAreaField: React.ComponentType<WorkableField> = ({\n  id,\n  required,\n  maxLength,\n  defaultValue,\n}) => {\n  const [value, setValue] = useState<string>(null);\n  return (\n    <FormField>\n      <textarea\n        name={id}\n        required={required}\n        id={`workable-${id}`}\n        defaultValue={defaultValue}\n        rows={5}\n        className=\"form-field__textarea\"\n        maxLength={maxLength}\n        onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n          setValue(e.target.value)\n        }\n      />\n      <MaxLength count={value?.length} maxLength={maxLength} />\n    </FormField>\n  );\n};\n","type FormItemProps = {\n  children: React.ReactNode;\n};\n\nexport const FormItem: React.ComponentType<FormItemProps> = ({ children }) => {\n  return <div className=\"form-item\">{children}</div>;\n};\n","import { FormField } from \"./FormField\";\n\nexport const DateField: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  defaultValue,\n}) => {\n  return (\n    <FormField>\n      <input\n        type=\"date\"\n        name={id}\n        defaultValue={defaultValue}\n        required={required}\n        id={`workable-${id}`}\n        className=\"form-field__text form-field__date\"\n      />\n    </FormField>\n  );\n};\n","import { FormField } from \"./FormField\";\n\nexport const NumberField: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  maxLength,\n  defaultValue,\n}) => {\n  return (\n    <FormField>\n      <input\n        type=\"number\"\n        name={id}\n        defaultValue={defaultValue}\n        required={required}\n        id={`workable-${id}`}\n        className=\"form-field__text form-field__number\"\n        maxLength={maxLength}\n      />\n    </FormField>\n  );\n};\n","import intlTelInput from \"intl-tel-input\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { ConfigContext } from \"./ConfigContext\";\nimport { FormField } from \"./FormField\";\n\nexport const TelephoneField: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  maxLength,\n  defaultValue,\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const config = useContext(ConfigContext);\n  const [dialCode, setDialCode] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (!inputRef.current) return;\n\n    const iti = intlTelInput(inputRef.current, {\n      initialCountry: config.telephoneInitialCountry,\n      allowDropdown: config.telephoneAllowDropdown,\n      autoHideDialCode: config.telephoneAutoHideDialCode,\n      autoPlaceholder: config.telephoneAutoPlaceholder,\n      customContainer: config.telephoneCustomContainer,\n      customPlaceholder: config.telephoneCustomPlaceholder,\n      dropdownContainer: config.telephoneDropdownContainer,\n      excludeCountries: config.telephoneExcludeCountries,\n      formatOnDisplay: config.telephoneFormatOnDisplay,\n      geoIpLookup: config.telephoneGeoIpLookup,\n      hiddenInput: config.telephoneHiddenInput,\n      localizedCountries: config.telephoneLocalizedCountries,\n      nationalMode: config.telephoneNationalMode,\n      onlyCountries: config.telephoneOnlyCountries,\n      placeholderNumberType: config.telephonePlaceholderNumberType,\n      preferredCountries: config.telephonePreferredCountries,\n      separateDialCode: config.telephoneSeparateDialCode,\n      utilsScript:\n        \"https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js\",\n    });\n\n    const onCountryChange = () => {\n      const countryData = iti.getSelectedCountryData();\n      setDialCode(countryData.dialCode);\n    };\n\n    onCountryChange();\n    inputRef.current.addEventListener(\"countrychange\", onCountryChange);\n\n    () => {\n      iti.destroy();\n      inputRef.current.removeEventListener(\"countrychange\", onCountryChange);\n    };\n  }, []);\n\n  return (\n    <FormField>\n      <input\n        type=\"tel\"\n        ref={inputRef}\n        name={id}\n        defaultValue={defaultValue}\n        required={required}\n        id={`workable-${id}`}\n        maxLength={maxLength}\n        className=\"form-field__text form-field__telephone\"\n      />\n      <input type=\"hidden\" name={`${id}_dialcode`} value={dialCode} readOnly />\n    </FormField>\n  );\n};\n\nexport default TelephoneField;\n","type ButtonProps = {\n  onClick?: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  theme?: \"primary\" | \"secondary\" | \"tertiary\" | \"ghost\";\n  type?: \"button\" | \"submit\" | \"reset\";\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  size?: \"md\" | \"lg\";\n  disabled?: boolean;\n  className?: string;\n};\n\nexport const Button: React.ComponentType<ButtonProps> = ({\n  onClick,\n  theme = \"primary\",\n  type = \"button\",\n  size = \"md\",\n  children,\n  style,\n  disabled,\n  className = \"\",\n  ...props\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={onClick}\n      className={`button button--${theme} button--${size} button--${\n        disabled ? \"disabled\" : \"enabled\"\n      } ${className}`}\n      style={style}\n      disabled={disabled}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n","import { useContext, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport { ConfigContext } from \"./ConfigContext\";\nimport { Button } from \"./Button\";\n\nexport type UploadFieldProps = {\n  onAvatarUpload?: (file: File) => Promise<string | { error: string }>;\n  onFileUpload?: (file: File) => Promise<string | { error: string }>;\n} & WorkableField;\n\nexport const UploadField: React.ComponentType<UploadFieldProps> = ({\n  id,\n  supportedFileTypes,\n  maxFileSize,\n  onAvatarUpload = () => \"\",\n  onFileUpload = () => \"\",\n}) => {\n  const config = useContext(ConfigContext);\n\n  const IS_IMAGE = Boolean(\n    supportedFileTypes.filter((x) => [\"jpg\", \"jpeg\", \"gif\", \"png\"].includes(x))\n      .length,\n  );\n\n  const [state, setState] = useState<\n    \"initial\" | \"loading\" | \"error\" | \"success\"\n  >(\"initial\");\n  const [image, setImage] = useState<null | { preview: string; name: string }>(\n    null,\n  );\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [fileURL, setFileURL] = useState<string>(\"\");\n  const { acceptedFiles, getRootProps, getInputProps, inputRef } = useDropzone({\n    maxFiles: 1,\n    multiple: false,\n    maxSize: maxFileSize,\n    accept: {\n      \"application/octet-stream\": supportedFileTypes.map((ext) => ext),\n    },\n    onFileDialogCancel: () => reset(),\n    onDrop: (acceptedFiles) => {\n      setState(\"loading\");\n\n      if (!acceptedFiles.length) {\n        setMessage(config.labelDropzoneNoFilesAccepted);\n        setState(\"error\");\n        return;\n      }\n\n      acceptedFiles.forEach((file) => {\n        const reader = new FileReader();\n\n        reader.onabort = () => {\n          reset();\n          setMessage(config.labelDropzoneAborted);\n          setState(\"error\");\n        };\n        reader.onerror = () => {\n          reset();\n          setMessage(config.labelDropzoneError);\n          setState(\"error\");\n        };\n        reader.onload = async () => {\n          const uploadedFile =\n            id === \"avatar\"\n              ? await onAvatarUpload(file)\n              : await onFileUpload(file);\n\n          if (typeof uploadedFile !== \"string\" && \"error\" in uploadedFile) {\n            setMessage(uploadedFile.error);\n            setState(\"error\");\n          } else {\n            setFileURL(uploadedFile);\n            setState(\"success\");\n          }\n        };\n        reader.readAsDataURL(file);\n      });\n\n      setImage(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          }),\n        )[0],\n      );\n    },\n  });\n\n  const reset = () => {\n    if (image) URL.revokeObjectURL(image.preview);\n    setState(\"initial\");\n    setFileURL(\"\");\n    setMessage(\"\");\n  };\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () => reset();\n  }, []);\n\n  const onClear = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    acceptedFiles.length = 0;\n    acceptedFiles.splice(0, acceptedFiles.length);\n    inputRef.current.value = \"\";\n    setImage(null);\n    setState(\"initial\");\n    setMessage(\"\");\n  };\n\n  return (\n    <div className=\"dropzone-wrapper\">\n      <button\n        type=\"button\"\n        data-action=\"remove-entry\"\n        onClick={onClear}\n        // style={{ display: \"none\" }}\n      />\n      <div {...getRootProps({ className: \"dropzone\" })} data-state={state}>\n        <input {...getInputProps()} />\n        <input name={id} type=\"hidden\" value={fileURL} readOnly />\n\n        {fileURL && acceptedFiles.length > 0 ? (\n          <>\n            {IS_IMAGE && image && (\n              <img\n                style={{\n                  maxWidth: 240,\n                }}\n                key={image.name}\n                src={image.preview}\n                onLoad={() => {\n                  URL.revokeObjectURL(image.preview);\n                }}\n              />\n            )}\n            {!IS_IMAGE &&\n              acceptedFiles.map((file) => <p key={file.name}>{file.name}</p>)}\n            <p className=\"dropzone__label\">\n              <span>{config.labelDropzoneReplaceFile}</span>{\" \"}\n              {config.labelDropzoneDragDrop}\n            </p>\n          </>\n        ) : (\n          <>\n            <p className=\"dropzone__label\">\n              <span>{config.labelDropzoneUpload}</span>{\" \"}\n              {config.labelDropzoneDragDrop}\n            </p>\n            <p className=\"dropzone__info\">\n              {maxFileSize &&\n                `${config.labelDropzoneMaxSize} ${Math.floor(\n                  maxFileSize / 1000000,\n                )}Mb. Acceptable file types .\n              ${supportedFileTypes.join(\", \")}.`}\n            </p>\n          </>\n        )}\n\n        {state === \"loading\" && (\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"dropzone__loading-icon\"\n          >\n            <style\n              dangerouslySetInnerHTML={{\n                __html: `\n                .spinner_b2T7{animation:spinner_xe7Q .8s linear infinite}.spinner_YRVV{animation-delay:-.65s}.spinner_c9oY{animation-delay:-.5s}@keyframes spinner_xe7Q{93.75%,100%{r:3px}46.875%{r:.2px}}`,\n              }}\n            />\n            <circle className=\"spinner_b2T7\" cx=\"4\" cy=\"12\" r=\"3\" />\n            <circle\n              className=\"spinner_b2T7 spinner_YRVV\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"3\"\n            />\n            <circle\n              className=\"spinner_b2T7 spinner_c9oY\"\n              cx=\"20\"\n              cy=\"12\"\n              r=\"3\"\n            />\n          </svg>\n        )}\n\n        {state === \"success\" && (\n          <span className=\"dropzone__success-icon\">{config.iconCheck()}</span>\n        )}\n\n        {message && <p className=\"dropzone__message\">{message}</p>}\n      </div>\n      {state === \"success\" && (\n        <Button\n          type=\"button\"\n          theme=\"ghost\"\n          onClick={onClear}\n          className=\"dropzone__clear\"\n        >\n          {config.iconClear()}\n          {config.labelClear}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default UploadField;\n","import { useContext, useRef } from \"react\";\nimport { Button } from \"./Button\";\nimport { ConfigContext } from \"./ConfigContext\";\n\ntype FieldsetProps = {\n  name?: string;\n  children: React.ReactNode;\n  displayClearButton?: boolean;\n};\nexport const Fieldset: React.ComponentType<FieldsetProps> = ({\n  name,\n  children,\n  displayClearButton = true,\n}) => {\n  const config = useContext(ConfigContext);\n  const fieldsetRef = useRef(null);\n\n  const onClear = () => {\n    const inputs = fieldsetRef.current.querySelectorAll(\n      \"input, textarea, select\",\n    );\n\n    inputs.forEach((input) => {\n      if (input.type === \"checkbox\" || input.type === \"radio\") {\n        input.checked = false;\n      } else {\n        input.value = \"\";\n      }\n      input.dispatchEvent(new Event(\"change\"));\n    });\n\n    const removeComplexMultipleEntries = fieldsetRef.current.querySelectorAll(\n      '[data-action=\"remove-entry\"]',\n    );\n    removeComplexMultipleEntries.forEach((button) => {\n      button.click();\n    });\n  };\n\n  return (\n    <fieldset className=\"form-fieldset\" ref={fieldsetRef}>\n      {name && (\n        <legend className=\"form-legend\">\n          <span className=\"form-legend__title\">{name}</span>\n          {displayClearButton && (\n            <span className=\"form-legend__clear\">\n              <Button type=\"button\" theme=\"ghost\" onClick={onClear}>\n                {config.iconClear()}\n                {config.labelClear}\n              </Button>\n            </span>\n          )}\n        </legend>\n      )}\n      {children}\n    </fieldset>\n  );\n};\n","import { useContext, useReducer, useRef, useState } from \"react\";\nimport { Field } from \"./Field\";\nimport { ConfigContext } from \"./ConfigContext\";\nimport * as Dialog from \"@radix-ui/react-dialog\";\nimport * as VisuallyHidden from \"@radix-ui/react-visually-hidden\";\nimport { Fieldset } from \"./Fieldset\";\nimport { Button } from \"./Button\";\n\ntype ActionType = {\n  id: string;\n  type: \"add\" | \"remove\" | \"edit\";\n  data?: Record<string, FieldValueType>;\n};\n\ntype FieldValueType = {\n  key: string;\n  value: string;\n  label: string;\n};\n\nexport const ComplexMultiple: React.ComponentType<WorkableField> = ({\n  id,\n  required,\n  label,\n  fields,\n}) => {\n  const config = useContext(ConfigContext);\n  const [state, setState] = useState<\"initial\" | \"dialog\">(\"initial\");\n\n  const formRef = useRef<HTMLFormElement>(null);\n\n  const hiddenValueFieldRef = useRef<HTMLInputElement>(null);\n  const [editingEntryId, setEditingEntryId] = useState<string | null>(null);\n\n  const entryId = useRef<number>(0);\n\n  /**\n   * entries is an array of objects that looks like this:\n   * [{\n   *  id: \"entry-1\",\n   *  type: \"add\",\n   *  data: {\n   *  \"entry-1\": {\n   *    key: \"firstname\",\n   *    value: \"John\",\n   *    label: \"First Name\"\n   * }]\n   */\n\n  const [entries, updateEntries] = useReducer((data, action: ActionType) => {\n    const index = data.findIndex(({ id }) => id === action.id);\n    let newData = [...data];\n\n    switch (action.type) {\n      case \"add\":\n        return [...data, action];\n\n      case \"remove\":\n        newData.splice(index, 1);\n        return newData;\n\n      case \"edit\":\n        newData.splice(index, 1, action);\n        return newData;\n    }\n  }, []);\n\n  /**\n   * Save when the 'save' button is clicked\n   * it can either be a 'save' or an 'edit' action\n   */\n\n  const onSave = () => {\n    if (!hiddenValueFieldRef.current) return;\n    if (!formRef) return;\n\n    const formData = new FormData(formRef.current);\n    const data = Object.fromEntries(formData.entries());\n\n    const action: ActionType = !editingEntryId\n      ? {\n          id: `entry-${++entryId.current}`,\n          type: \"add\",\n          data: {},\n        }\n      : {\n          id: editingEntryId,\n          type: \"edit\",\n          data: {},\n        };\n\n    Object.entries(data).forEach(([key, value]: [string, string]) => {\n      const matchingField = fields.find((f) => f.id === key);\n\n      if (!value.trim().length) return;\n      action.data[key] = {\n        key: key,\n        value,\n        label: matchingField.label,\n      };\n    });\n    updateEntries(action);\n    setState(\"initial\");\n    setEditingEntryId(null);\n  };\n\n  return (\n    <>\n      <input\n        type=\"hidden\"\n        name={id}\n        value={JSON.stringify(entries)}\n        ref={hiddenValueFieldRef}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          updateEntries(JSON.parse(e.target.value))\n        }\n      />\n      {Boolean(entries.length) && (\n        <div className=\"complex-multiple__entries\">\n          {(entries as ActionType[]).map((entry) => {\n            return (\n              <div key={entry.id} className=\"complex-multiple__entry\">\n                <table className=\"complex-multiple__entry-table\">\n                  <tbody>\n                    {Object.entries(entry.data).map(\n                      ([key, value]: [string, FieldValueType]) => (\n                        <tr key={key}>\n                          <th>{value.label}</th>\n                          {value.value === \"on\" ? (\n                            <td>{config.iconCheck()}</td>\n                          ) : (\n                            <td>{value.value}</td>\n                          )}\n                        </tr>\n                      ),\n                    )}\n                  </tbody>\n                </table>\n\n                <div className=\"complex-multiple__entry-actions\">\n                  <Button\n                    type=\"button\"\n                    theme=\"ghost\"\n                    onClick={() => {\n                      setEditingEntryId(entry.id);\n                      setState(\"dialog\");\n                    }}\n                  >\n                    {config.iconEdit()}\n                    <VisuallyHidden.Root>\n                      {config.labelEdit}\n                    </VisuallyHidden.Root>\n                  </Button>\n\n                  <Button\n                    type=\"button\"\n                    theme=\"ghost\"\n                    data-action=\"remove-entry\"\n                    onClick={() =>\n                      updateEntries({\n                        id: entry.id,\n                        type: \"remove\",\n                      })\n                    }\n                  >\n                    {config.iconDelete()}\n                    <VisuallyHidden.Root>\n                      {config.labelDelete}\n                    </VisuallyHidden.Root>\n                  </Button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n\n      <div className=\"complex-multiple__add\">\n        <Button type=\"button\" onClick={() => setState(\"dialog\")}>\n          {config.labelAdd}\n        </Button>\n      </div>\n\n      <Dialog.Root open={state === \"dialog\"}>\n        <Dialog.Portal>\n          <Dialog.Overlay className=\"dialog-overlay\" />\n          <Dialog.Content\n            className=\"dialog-content application-form-dialog\"\n            onEscapeKeyDown={() => setState(\"initial\")}\n            onPointerDownOutside={() => setState(\"initial\")}\n            onInteractOutside={() => setState(\"initial\")}\n          >\n            <div className=\"dialog-content__form\">\n              <VisuallyHidden.Root asChild>\n                <Dialog.Title className=\"dialog-title\">\n                  {editingEntryId ? config.labelEdit : config.labelAdd}\n                </Dialog.Title>\n              </VisuallyHidden.Root>\n\n              <Button\n                aria-label={config.labelClose}\n                onClick={() => setState(\"initial\")}\n                theme=\"tertiary\"\n                className=\"dialog-content__close\"\n              >\n                {config.iconCancel()}\n              </Button>\n\n              <form className=\"complex-multiple__form\" ref={formRef}>\n                <Fieldset name={label} displayClearButton={false}>\n                  {fields.map((subfield) => {\n                    const editingEntry = {\n                      ...entries.find(({ id }) => id === editingEntryId),\n                    };\n                    return (\n                      <Field\n                        key={subfield.id}\n                        name={subfield.id}\n                        field={{\n                          ...subfield,\n                          defaultValue:\n                            editingEntryId && editingEntry\n                              ? editingEntry.data[subfield.id]?.value\n                              : null,\n                        }}\n                      />\n                    );\n                  })}\n\n                  <div className=\"button-row\">\n                    <Button type=\"button\" onClick={() => onSave()}>\n                      {config.labelSave}\n                    </Button>\n\n                    <Button\n                      type=\"button\"\n                      theme=\"tertiary\"\n                      onClick={() => {\n                        setEditingEntryId(null);\n                        setState(\"initial\");\n                      }}\n                    >\n                      {config.labelCancel}\n                    </Button>\n                  </div>\n                </Fieldset>\n              </form>\n            </div>\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n    </>\n  );\n};\n\nexport default ComplexMultiple;\n","import { FormField } from \"./FormField\";\n\nexport const SelectField: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  options,\n  defaultValue,\n}) => {\n  return (\n    <FormField>\n      <select\n        className=\"form-field__select\"\n        name={id}\n        required={required}\n        id={`workable-${id}`}\n        defaultValue={defaultValue}\n      >\n        <option value={null}></option>\n        {options?.map((choice) => {\n          return (\n            <option key={choice.name} value={choice.value}>\n              {choice.value}\n            </option>\n          );\n        })}\n      </select>\n    </FormField>\n  );\n};\n","export const ChoiceField: React.ComponentType<WorkableField> = ({\n  id,\n  options,\n  singleOption,\n  defaultValue,\n}) => {\n  return (\n    <fieldset className=\"form-field__choice-fieldset\">\n      {options?.map((choice) => {\n        return (\n          <div className=\"form-field__choice-wrapper\" key={choice.name}>\n            <input\n              type={singleOption ? \"radio\" : \"checkbox\"}\n              name={id}\n              id={`${id}${choice.name}`}\n              value={choice.value}\n              className=\"form-field__choice\"\n              defaultChecked={\n                Array.isArray(defaultValue)\n                  ? defaultValue.includes(choice.value)\n                  : defaultValue === choice.value\n              }\n            />\n            <label htmlFor={`${id}${choice.value}`}>{choice.value}</label>\n          </div>\n        );\n      })}\n    </fieldset>\n  );\n};\n","import React = require(\"react\");\nimport { Label } from \"./Label\";\nimport { Toggle } from \"./Toggle\";\nimport { TextField } from \"./TextField\";\nimport { TextAreaField } from \"./TextAreaField\";\nimport { FormItem } from \"./FormItem\";\nimport { DateField } from \"./DateField\";\nimport { NumberField } from \"./NumberField\";\n\nimport { TelephoneField } from \"./TelephoneField\";\nimport { UploadField, UploadFieldProps } from \"./UploadField\";\nimport { ComplexMultiple } from \"./ComplexMultipleField\";\nimport { SelectField } from \"./SelectField\";\nimport { ChoiceField } from \"./ChoiceField\";\n\nexport type FieldProps = {\n  name: string;\n  field: WorkableField;\n  onAvatarUpload?: UploadFieldProps[\"onAvatarUpload\"];\n  onFileUpload?: UploadFieldProps[\"onFileUpload\"];\n};\n\nexport const Field: React.ComponentType<FieldProps> = ({\n  name,\n  field,\n  onAvatarUpload,\n  onFileUpload,\n}) => {\n  if (!field) {\n    console.log(`Missing field: ${name}`);\n    return null;\n  }\n\n  let Component;\n\n  switch (field.type) {\n    case \"paragraph\":\n      Component = () => <TextAreaField {...field} />;\n      break;\n\n    case \"file\":\n      Component = () => (\n        <UploadField\n          {...field}\n          onAvatarUpload={onAvatarUpload}\n          onFileUpload={onFileUpload}\n        />\n      );\n      break;\n\n    case \"boolean\":\n      Component = () => <Toggle {...field} />;\n      break;\n\n    case \"date\":\n      Component = () => <DateField {...field} />;\n      break;\n\n    case \"multiple\":\n      Component = () => <ChoiceField {...field} />;\n      break;\n\n    case \"dropdown\":\n      Component = () => <SelectField {...field} />;\n      break;\n\n    case \"number\":\n      Component = () => <NumberField {...field} />;\n      break;\n\n    case \"group\":\n      Component = () => <ComplexMultiple {...field} />;\n      break;\n\n    default:\n      Component = () => <TextField {...field} />;\n  }\n\n  if (field.id === \"phone\") {\n    Component = () => <TelephoneField {...field} />;\n  }\n\n  if (field.type === \"boolean\") {\n    return <FormItem>{Component && <Component />}</FormItem>;\n  }\n\n  return (\n    <FormItem>\n      <Label label={field.label} id={field.id} required={field.required} />\n      {Component && <Component />}\n      {field.helper && <p className=\"form-helper\">{field.helper}</p>}\n    </FormItem>\n  );\n};\n","type ButtonRowProps = {\n  children?: React.ReactNode;\n};\n\nexport const ButtonRow: React.ComponentType<ButtonRowProps> = ({\n  children,\n}) => {\n  return <div className=\"button-row\">{children}</div>;\n};\n","type HeadingProps = {\n  children?: React.ReactNode;\n  as?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n};\n\nexport const Heading: React.ComponentType<HeadingProps> = ({\n  children,\n  as = \"h2\",\n}) => {\n  const Element = as;\n  return <Element className={`heading heading--${as}`}>{children}</Element>;\n};\n","import React = require(\"react\");\n\nimport { ConfigContext } from \"./ConfigContext\";\nimport { Heading } from \"./Heading\";\n\ntype FormProps = {\n  children: React.ReactNode;\n  onSubmit(\n    event: React.FormEvent<HTMLFormElement>,\n    cb: (error: string | null) => void,\n  ): void;\n};\n\nexport const Form: React.ComponentType<FormProps> = ({\n  children,\n  onSubmit,\n}) => {\n  const [state, setState] = React.useState<\n    \"initial\" | \"saving\" | \"error\" | \"complete\"\n  >(\"initial\");\n\n  const [error, setError] = React.useState<string | null>(null);\n  const config = React.useContext(ConfigContext);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    setState(\"saving\");\n    setError(null);\n    onSubmit(event, (error: string | null) => {\n      if (error) {\n        setError(error);\n        setState(\"error\");\n      } else {\n        setState(\"complete\");\n      }\n    });\n  };\n\n  return (\n    <form\n      className={`form--${state}`}\n      onSubmit={handleSubmit}\n      encType=\"multipart/form-data\"\n    >\n      {config.labelForm && <Heading as=\"h1\">{config.labelForm}</Heading>}\n      {children}\n      <p\n        className={`form__error ${error ? \"enabled\" : \"disabled\"}`}\n        onClick={() => setError(null)}\n      >\n        {error}\n      </p>\n    </form>\n  );\n};\n","/**\n * Clean form data\n * - checkboxes are stored as \"on\" or \"off\"\n * - complex fields are stored as json\n */\n\nexport const cleanFormData = (data: any) => {\n  const cleanedData: any = {};\n  Object.keys(data).forEach((key) => {\n    let value = data[key];\n\n    // parse complex fields that are already stored as json\n    try {\n      value = JSON.parse(value);\n    } catch (e) {}\n\n    // arrays\n    if (Array.isArray(value)) {\n      cleanedData[key] = value.map((item) => {\n        if (typeof item === \"object\" && item !== null) {\n          if (\"value\" in value) {\n            return cleanValue(value.value);\n          }\n\n          if (\"data\" in item) {\n            const cleanedData: any = {};\n            Object.keys(item.data).forEach((key) => {\n              cleanedData[key] = cleanValue(item.data[key].value);\n            });\n            return cleanedData;\n          }\n\n          return cleanFormData(item);\n        }\n        return cleanValue(item);\n      });\n      return;\n    }\n\n    cleanedData[key] = cleanValue(value);\n  });\n\n  return cleanedData;\n};\n\n/**\n * Clean value\n * - empty values are removed\n * - checkboxes are stored as boolean\n */\n\nexport const cleanValue = (value: any) => {\n  // empty values\n  if (typeof value === \"string\" && value.trim().length === 0) {\n    return;\n  }\n\n  // checkboxes\n  if (value === \"on\" || value === \"off\") {\n    return value === \"on\" ? true : false;\n  }\n\n  return value;\n};\n\n/**\n * Create workable candidate from form data\n * based on field types in formFields and questions\n */\n\nexport const createWorkableCandidate = (\n  data: any,\n  allFields: WorkableField[],\n) => {\n  const candidate: WorkableCandidate = {\n    name: data.name,\n    firstname: data.firstname,\n    lastname: data.lastname,\n    email: data.email,\n    headline: data.headline,\n    summary: data.summary,\n    address: data.address,\n    phone: data.phone ? `+${data.phone_dialcode}${data.phone}` : undefined,\n    cover_letter: data.cover_letter,\n    education_entries: data.education,\n    experience_entries: data.experience,\n    answers: [],\n    skills: data.skills,\n    tags: data.tags,\n    disqualified: data.disqualified,\n    disqualification_reason: data.disqualification_reason,\n    disqualified_at: data.disqualified_at,\n    social_profiles: data.social_profiles,\n    domain: data.domain,\n    recruiter_key: data.recruiter_key,\n  };\n\n  // find questions that are not yet in the object\n  const missingQuestions = allFields.filter(\n    (question) => !Object.keys(candidate).includes(question.id),\n  );\n\n  // add answers;\n  missingQuestions.forEach((question) => {\n    const value = data[question.id];\n\n    if (value) {\n      switch (question.type) {\n        case \"text\":\n        case \"email\":\n        case \"phone\":\n        case \"paragraph\":\n          const shortTextAnswer: WorkableAnswerShortText = {\n            label: question.label,\n            question_key: question.id,\n            body: value,\n          };\n          candidate.answers.push(shortTextAnswer);\n          break;\n\n        case \"multiple\":\n          const multipleChoiceAnswer: WorkableAnswerMultipleChoice = {\n            label: question.label,\n            question_key: question.id,\n            choices: value,\n          };\n          candidate.answers.push(multipleChoiceAnswer);\n          break;\n\n        case \"boolean\":\n          const booleanAnswer: WorkableAnswerBoolean = {\n            label: question.label,\n            question_key: question.id,\n            checked: value,\n          };\n          candidate.answers.push(booleanAnswer);\n          break;\n\n        case \"dropdown\":\n          const dropdownAnswer: WorkableAnswerDropdown = {\n            label: question.label,\n            question_key: question.id,\n            choices: value,\n          };\n          candidate.answers.push(dropdownAnswer);\n          break;\n\n        case \"date\":\n          const dateAnswer: WorkableAnswerDate = {\n            label: question.label,\n            question_key: question.id,\n            date: value,\n          };\n          candidate.answers.push(dateAnswer);\n          break;\n\n        case \"number\":\n          const numericAnswer: WorkableAnswerNumeric = {\n            label: question.label,\n            question_key: question.id,\n            value: +value,\n          };\n          candidate.answers.push(numericAnswer);\n          break;\n\n        case \"file\":\n          const fileAnswer: WorkableAnswerFileData = {\n            label: question.label,\n            question_key: question.id,\n            file: {\n              name: question.id,\n              data: value,\n            },\n          };\n          candidate.answers.push(fileAnswer);\n          break;\n      }\n    }\n  });\n\n  // remove undefined values\n  Object.keys(candidate).forEach((key) =>\n    candidate[key] === undefined ? delete candidate[key] : {},\n  );\n\n  return candidate;\n};\n","import React = require(\"react\");\nimport { ConfigContext, DEFAULT_FORM_CONFIG } from \"./ConfigContext\";\nimport { Field } from \"./Field\";\nimport { Fieldset } from \"./Fieldset\";\nimport { Button } from \"./Button\";\nimport { ButtonRow } from \"./ButtonRow\";\nimport { Form } from \"./Form\";\nimport { cleanFormData, createWorkableCandidate } from \"./utils\";\nimport { UploadFieldProps } from \"./UploadField\";\n\ntype ApplicationFormProps = {\n  config?: FormConfigType;\n  form?: WorkableFieldset[];\n  onSave?: (\n    data: WorkableCandidate,\n    cb: (error?: string | null) => void,\n  ) => void;\n  onAvatarUpload?: UploadFieldProps[\"onAvatarUpload\"];\n  onFileUpload?: UploadFieldProps[\"onFileUpload\"];\n};\n\nexport const ApplicationForm: React.ComponentType<ApplicationFormProps> = ({\n  config = {},\n  form = [],\n  onAvatarUpload,\n  onFileUpload,\n  onSave = () => {},\n}) => {\n  const allFields: WorkableField[] = form.reduce((acc, fieldset) => {\n    return [...acc, ...fieldset.fields];\n  }, []);\n\n  const handleSubmit = (\n    event: React.FormEvent<HTMLFormElement>,\n    cb: (error?: string | null) => void,\n  ) => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const entries: any = Object.fromEntries(formData.entries());\n    const allValues: any = {};\n    Object.keys(entries).forEach((key) => {\n      const question = allFields.find((q) => q.id === key);\n      if (question?.type === \"multiple\" || question?.type === \"dropdown\") {\n        allValues[key] = formData.getAll(key);\n      } else {\n        allValues[key] = formData.get(key);\n      }\n    });\n\n    const cleanData: any = cleanFormData(allValues);\n\n    const workableCandidate: WorkableCandidate = createWorkableCandidate(\n      cleanData,\n      allFields,\n    );\n\n    onSave(workableCandidate, (error) => {\n      if (error) {\n        cb(error);\n      } else {\n        cb();\n      }\n    });\n\n    return false;\n  };\n\n  return (\n    <div className=\"application-form\">\n      <ConfigContext.Provider value={{ ...DEFAULT_FORM_CONFIG, ...config }}>\n        <Form onSubmit={handleSubmit}>\n          {form.map((fieldset) => (\n            <Fieldset name={fieldset.name} key={fieldset.name}>\n              {fieldset.fields.map((field) => (\n                <Field\n                  key={field.id}\n                  name={field.id}\n                  field={field}\n                  onAvatarUpload={onAvatarUpload}\n                  onFileUpload={onFileUpload}\n                />\n              ))}\n            </Fieldset>\n          ))}\n          <Fieldset>\n            <ButtonRow>\n              <Button type=\"submit\" size=\"lg\" style={{ width: \"100%\" }}>\n                {config.labelSubmit || DEFAULT_FORM_CONFIG.labelSubmit}\n              </Button>\n            </ButtonRow>\n          </Fieldset>\n        </Form>\n      </ConfigContext.Provider>\n    </div>\n  );\n};\n"],"names":["$46371591ef975b7f$export$3f655c770124f5e3","telephoneInitialCountry","telephonePreferredCountries","telephoneAllowDropdown","telephoneAutoHideDialCode","telephoneAutoPlaceholder","telephoneCustomContainer","telephoneCustomPlaceholder","telephoneDropdownContainer","telephoneExcludeCountries","telephoneFormatOnDisplay","telephoneGeoIpLookup","telephoneHiddenInput","telephoneLocalizedCountries","telephoneNationalMode","telephoneOnlyCountries","telephonePlaceholderNumberType","telephoneSeparateDialCode","labelForm","labelSubmit","labelAdd","labelSave","labelCancel","labelEdit","labelDelete","labelClose","labelOptional","labelClear","labelDropzoneUpload","labelDropzoneDragDrop","labelDropzoneMaxSize","labelDropzoneAcceptableFileTypes","labelDropzoneReplaceFile","labelDropzoneNoFilesAccepted","labelDropzoneAborted","labelDropzoneError","iconCancel","$4FLPu$reactjsxruntime","jsx","viewBox","fill","xmlns","width","height","d","stroke","strokeWidth","iconCheck","iconEdit","jsxs","iconDelete","iconClear","$46371591ef975b7f$export$a92f85ab3e9ad68b","$4FLPu$react","createContext","$0b181d47ed69cae8$export$b04be29aa201d4f5","label","required","id","config","useContext","className","htmlFor","$2aa09ed41b960c53$export$bea8ebba691c5813","defaultValue","type","name","defaultChecked","Boolean","$c4f26462bdfd8192$export$56e87bf42978147a","children","$8f728dfe91be7728$export$d1f826a06de665f2","count","maxLength","$2ec2b2615757c602$export$2c73285ae9390cec","value","setValue","useState","onChange","e","target","length","$5530faebb81017b1$export$301bf6213f61d17f","rows","$fed4c326da8dd110$export$6713ee24224a3285","$f0b54e4fac0798ec$export$d9781c7894a82487","$1207f4e6d4f3dfe5$export$63c5fa0b2fdccd2e","$6a387c6d0a95ddc1$export$bbb9a9f0dc629995","inputRef","useRef","dialCode","setDialCode","useEffect","current","iti","$4FLPu$intltelinput","initialCountry","allowDropdown","autoHideDialCode","autoPlaceholder","customContainer","customPlaceholder","dropdownContainer","excludeCountries","formatOnDisplay","geoIpLookup","hiddenInput","localizedCountries","nationalMode","onlyCountries","placeholderNumberType","preferredCountries","separateDialCode","utilsScript","onCountryChange","countryData","getSelectedCountryData","addEventListener","ref","readOnly","$91b9aad5a64c1a48$export$353f5b6fc5456de1","onClick","theme","size","style","disabled","props","$92cb36c8aa41f29f$export$d61c19f03375c53e","supportedFileTypes","maxFileSize","onAvatarUpload","onFileUpload","IS_IMAGE","filter","x","includes","state","setState","image","setImage","message","setMessage","fileURL","setFileURL","acceptedFiles","getRootProps","getInputProps","$4FLPu$reactdropzone","useDropzone","maxFiles","multiple","maxSize","accept","map","ext","onFileDialogCancel","reset","onDrop","forEach","file","reader","FileReader","onabort","onerror","onload","async","uploadedFile","error","readAsDataURL","Object","assign","preview","URL","createObjectURL","revokeObjectURL","onClear","preventDefault","splice","Fragment","maxWidth","src","onLoad","Math","floor","join","dangerouslySetInnerHTML","__html","cx","cy","r","$51b1b21d0f089fd2$export$e154be390aa0e14","displayClearButton","fieldsetRef","querySelectorAll","input","checked","dispatchEvent","Event","button","click","$aabbac4c6e41489a$export$e8c699c108165025","fields","formRef","hiddenValueFieldRef","editingEntryId","setEditingEntryId","entryId","entries","updateEntries","useReducer","data","action","index","findIndex","newData","JSON","stringify","parse","entry","key","$4FLPu$radixuireactvisuallyhidden","Root","$4FLPu$radixuireactdialog","open","Portal","Overlay","Content","onEscapeKeyDown","onPointerDownOutside","onInteractOutside","asChild","Title","subfield","editingEntry","find","$83cda72e4a349305$export$a455218a85c89869","field","formData","FormData","fromEntries","matchingField","f","trim","onSave","$e92f6eb09d0fcfe6$export$d55b50a564d0b931","options","choice","$797e730d1d4d77a6$export$fc4f3719f31d1e79","singleOption","Array","isArray","console","log","Component","helper","$5263deb48f373351$export$564cbe3426fc093a","$5982914be01221fb$export$a8a3e93435678ff9","as","Element","$6952fa8d42b24858$export$a7fed597f4b8afd8","onSubmit","setError","event","encType","$533342404bccfdc5$export$9ede6ba874448640","cleanedData","keys","item","$533342404bccfdc5$export$33f062f47f21a01","$533342404bccfdc5$export$7a4712243be385f2","allFields","candidate","firstname","lastname","email","headline","summary","address","phone","phone_dialcode","undefined","cover_letter","education_entries","education","experience_entries","experience","answers","skills","tags","disqualified","disqualification_reason","disqualified_at","social_profiles","domain","recruiter_key","question","shortTextAnswer","question_key","body","push","multipleChoiceAnswer","choices","booleanAnswer","dropdownAnswer","dateAnswer","date","numericAnswer","fileAnswer","$196f026530850a63$export$60413e28724d3abd","form","reduce","acc","fieldset","Provider","cb","currentTarget","allValues","q","getAll","get","cleanData","workableCandidate"],"version":3,"file":"main.js.map"}