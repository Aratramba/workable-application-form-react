{"mappings":"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","sources":["src/ConfigContext.tsx","src/Label.tsx","src/Toggle.tsx","src/FormField.tsx","src/MaxLength.tsx","src/TextField.tsx","src/TextAreaField.tsx","src/FormItem.tsx","src/DateField.tsx","src/NumberField.tsx","src/TelephoneField.tsx","src/UploadField.tsx","src/Button.tsx","src/Fieldset.tsx","src/ComplexMultipleField.tsx","src/SelectField.tsx","src/ChoiceField.tsx","src/Field.tsx","src/ButtonRow.tsx","src/Heading.tsx","src/Form.tsx","src/utils.ts","src/ApplicationForm.tsx"],"sourcesContent":["import React = require(\"react\");\n\nexport const DEFAULT_FORM_CONFIG: FormConfigType = {\n  telephoneInitialCountry: \"US\",\n  telephonePreferredCountries: [\"us\", \"gb\", \"ca\", \"de\", \"au\"],\n  telephoneAllowDropdown: true,\n  telephoneAutoHideDialCode: false,\n  telephoneAutoPlaceholder: \"polite\",\n  telephoneCustomContainer: \"\",\n  telephoneCustomPlaceholder: null,\n  telephoneDropdownContainer: null,\n  telephoneExcludeCountries: [],\n  telephoneFormatOnDisplay: true,\n  telephoneGeoIpLookup: null,\n  telephoneHiddenInput: \"\",\n  telephoneLocalizedCountries: null,\n  telephoneNationalMode: false,\n  telephoneOnlyCountries: [],\n  telephonePlaceholderNumberType: \"MOBILE\",\n  telephoneSeparateDialCode: true,\n\n  // labels\n  labelForm: \"Application\",\n  labelSubmit: \"Submit application\",\n  labelAdd: \"Add\",\n  labelSave: \"Save\",\n  labelCancel: \"Cancel\",\n  labelEdit: \"Edit\",\n  labelDelete: \"Delete\",\n  labelClose: \"Close\",\n  labelOptional: \"(optional)\",\n  labelClear: \"Clear\",\n\n  // dropzone\n  labelDropzoneUpload: \"Upload a file\",\n  labelDropzoneDragDrop: \"or drag and drop here\",\n  labelDropzoneMaxSize: \"Max file size is \",\n  labelDropzoneAcceptableFileTypes: \"Acceptable file types: \",\n  labelDropzoneReplaceFile: \"Replace file\",\n  labelDropzoneNoFilesAccepted: \"No files accepted\",\n  labelDropzoneAborted: \"File reading was aborted\",\n  labelDropzoneError: \"File reading has failed\",\n\n  // icons\n  iconCancel: () => (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n    >\n      <path\n        d=\"M7.7574 7.7574 12 12.0001m0 0 4.2426 4.2426M12 12.0001l4.2426-4.2427M12 12.0001l-4.2426 4.2426\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n    </svg>\n  ),\n  iconCheck: () => (\n    <svg\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={24}\n      height={24}\n    >\n      <path\n        d=\"M6.5 12.5 10 16l7.5-7.5\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n    </svg>\n  ),\n  iconEdit: () => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={24}\n      height={24}\n    >\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        d=\"M9 6.75H4.75v12.5h12.5V15\"\n      ></path>\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        d=\"M17.5 4.25l-7.25 7.25v2.75H13l7.24-7.26 -2.75-2.75Z\"\n      ></path>\n    </svg>\n  ),\n  iconDelete: () => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={24}\n      height={24}\n    >\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        d=\"M7.25 7.75h9.5m-9.5 0v10.5h9.5V7.75m-9.5 0H5m11.75 0H19m-4.75 0v-3h-4.5v3\"\n      ></path>\n    </svg>\n  ),\n  iconClear: () => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={24}\n      height={24}\n    >\n      <path\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        d=\"M7.25 7.75h9.5m-9.5 0v10.5h9.5V7.75m-9.5 0H5m11.75 0H19m-4.75 0v-3h-4.5v3\"\n      ></path>\n    </svg>\n  ),\n};\n\nexport const ConfigContext = React.createContext(DEFAULT_FORM_CONFIG);\n","import React = require(\"react\");\nimport { ConfigContext } from \"./ConfigContext\";\n\ntype LabelProps = {\n  label: React.ReactElement | React.ReactNode;\n  id: string;\n  required: boolean;\n};\n\nexport const Label: React.ComponentType<LabelProps> = ({\n  label,\n  required,\n  id,\n}) => {\n  const config = React.useContext(ConfigContext);\n\n  return (\n    <div className=\"form-label-wrapper\">\n      <label className=\"form-label\" htmlFor={`workable-${id}`}>\n        {label}\n        {required ? (\n          <span className=\"form-label__required\">*</span>\n        ) : (\n          <span className=\"form-label__optional\">{config.labelOptional}</span>\n        )}\n      </label>\n    </div>\n  );\n};\n","import { useContext } from \"react\";\nimport { Label } from \"./Label\";\nimport { ConfigContext } from \"./ConfigContext\";\n\nexport const Toggle: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  label,\n  defaultValue,\n}) => {\n  const config = useContext(ConfigContext);\n  return (\n    <div className=\"toggle-wrapper\">\n      <div className=\"toggle\">\n        <input\n          type=\"checkbox\"\n          name={id}\n          required={required}\n          id={`workable-${id}`}\n          className=\"toggle__input\"\n          defaultChecked={Boolean(defaultValue)}\n        />\n        <span className=\"toggle__check\">{config.iconCheck()}</span>\n      </div>\n\n      <Label label={label} id={id} required={required} />\n    </div>\n  );\n};\n","type FormFieldProps = {\n  children: React.ReactNode;\n};\n\nexport const FormField: React.ComponentType<FormFieldProps> = ({\n  children,\n}) => {\n  return (\n    <div className=\"form-field\">\n      <div className=\"form-field__wrapper\">{children}</div>\n    </div>\n  );\n};\n","type MaxLengthProps = {\n  count?: number;\n  maxLength?: number;\n};\n\nexport const MaxLength = ({ count = 0, maxLength }) => {\n  if (!maxLength) return null;\n\n  return (\n    <span className=\"form-field__maxlength\">\n      {count} / {maxLength}\n    </span>\n  );\n};\n","import { useState } from \"react\";\nimport { FormField } from \"./FormField\";\nimport { MaxLength } from \"./MaxLength\";\n\nexport const TextField: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  defaultValue,\n  maxLength,\n}) => {\n  const [value, setValue] = useState<string>(null);\n\n  return (\n    <FormField>\n      <input\n        type=\"text\"\n        name={id}\n        required={required}\n        id={`workable-${id}`}\n        defaultValue={defaultValue}\n        className=\"form-field__text\"\n        maxLength={maxLength}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          setValue(e.target.value)\n        }\n      />\n      <MaxLength count={value?.length} maxLength={maxLength} />\n    </FormField>\n  );\n};\n","import { useState } from \"react\";\nimport { FormField } from \"./FormField\";\n\nimport { MaxLength } from \"./MaxLength\";\n\nexport const TextAreaField: React.ComponentType<WorkableField> = ({\n  id,\n  required,\n  maxLength,\n  defaultValue,\n}) => {\n  const [value, setValue] = useState<string>(null);\n  return (\n    <FormField>\n      <textarea\n        name={id}\n        required={required}\n        id={`workable-${id}`}\n        defaultValue={defaultValue}\n        rows={5}\n        className=\"form-field__textarea\"\n        maxLength={maxLength}\n        onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) =>\n          setValue(e.target.value)\n        }\n      />\n      <MaxLength count={value?.length} maxLength={maxLength} />\n    </FormField>\n  );\n};\n","type FormItemProps = {\n  children: React.ReactNode;\n};\n\nexport const FormItem: React.ComponentType<FormItemProps> = ({ children }) => {\n  return <div className=\"form-item\">{children}</div>;\n};\n","import { FormField } from \"./FormField\";\n\nexport const DateField: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  defaultValue,\n}) => {\n  return (\n    <FormField>\n      <input\n        type=\"date\"\n        name={id}\n        defaultValue={defaultValue}\n        required={required}\n        id={`workable-${id}`}\n        className=\"form-field__text form-field__date\"\n      />\n    </FormField>\n  );\n};\n","import { FormField } from \"./FormField\";\n\nexport const NumberField: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  maxLength,\n  defaultValue,\n}) => {\n  return (\n    <FormField>\n      <input\n        type=\"number\"\n        name={id}\n        defaultValue={defaultValue}\n        required={required}\n        id={`workable-${id}`}\n        className=\"form-field__text form-field__number\"\n        maxLength={maxLength}\n      />\n    </FormField>\n  );\n};\n","import intlTelInput from \"intl-tel-input\";\nimport { useContext, useEffect, useRef, useState } from \"react\";\nimport { ConfigContext } from \"./ConfigContext\";\nimport { FormField } from \"./FormField\";\n\nexport const TelephoneField: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  maxLength,\n  defaultValue,\n}) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const config = useContext(ConfigContext);\n  const [dialCode, setDialCode] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (!inputRef.current) return;\n\n    const iti = intlTelInput(inputRef.current, {\n      initialCountry: config.telephoneInitialCountry,\n      allowDropdown: config.telephoneAllowDropdown,\n      autoHideDialCode: config.telephoneAutoHideDialCode,\n      autoPlaceholder: config.telephoneAutoPlaceholder,\n      customContainer: config.telephoneCustomContainer,\n      customPlaceholder: config.telephoneCustomPlaceholder,\n      dropdownContainer: config.telephoneDropdownContainer,\n      excludeCountries: config.telephoneExcludeCountries,\n      formatOnDisplay: config.telephoneFormatOnDisplay,\n      geoIpLookup: config.telephoneGeoIpLookup,\n      hiddenInput: config.telephoneHiddenInput,\n      localizedCountries: config.telephoneLocalizedCountries,\n      nationalMode: config.telephoneNationalMode,\n      onlyCountries: config.telephoneOnlyCountries,\n      placeholderNumberType: config.telephonePlaceholderNumberType,\n      preferredCountries: config.telephonePreferredCountries,\n      separateDialCode: config.telephoneSeparateDialCode,\n      utilsScript:\n        \"https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js\",\n    });\n\n    const onCountryChange = () => {\n      const countryData = iti.getSelectedCountryData();\n      setDialCode(countryData.dialCode);\n    };\n\n    onCountryChange();\n    inputRef.current.addEventListener(\"countrychange\", onCountryChange);\n\n    () => {\n      iti.destroy();\n      inputRef.current.removeEventListener(\"countrychange\", onCountryChange);\n    };\n  }, []);\n\n  return (\n    <FormField>\n      <input\n        type=\"tel\"\n        ref={inputRef}\n        name={id}\n        defaultValue={defaultValue}\n        required={required}\n        id={`workable-${id}`}\n        maxLength={maxLength}\n        className=\"form-field__text form-field__telephone\"\n      />\n      <input type=\"hidden\" name={`${id}_dialcode`} value={dialCode} readOnly />\n    </FormField>\n  );\n};\n\nexport default TelephoneField;\n","import { useContext, useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nimport { ConfigContext } from \"./ConfigContext\";\n\nexport const UploadField: React.ComponentType<WorkableField> = ({\n  id,\n  supportedFileTypes,\n  maxFileSize,\n}) => {\n  const config = useContext(ConfigContext);\n\n  const IS_IMAGE = Boolean(\n    supportedFileTypes.filter((x) => [\"jpg\", \"jpeg\", \"gif\", \"png\"].includes(x))\n      .length,\n  );\n\n  const [state, setState] = useState<\n    \"initial\" | \"loading\" | \"error\" | \"success\"\n  >(\"initial\");\n  const [image, setImage] = useState<null | { preview: string; name: string }>(\n    null,\n  );\n  const [message, setMessage] = useState<string>(\"\");\n\n  const [fileBase64, setFileBase64] = useState<string>(\"\");\n  const { acceptedFiles, getRootProps, getInputProps, inputRef } = useDropzone({\n    maxFiles: 1,\n    multiple: false,\n    maxSize: maxFileSize,\n    accept: {\n      \"application/octet-stream\": supportedFileTypes.map((ext) => `.${ext}`),\n    },\n    onDrop: (acceptedFiles) => {\n      setState(\"loading\");\n\n      if (!acceptedFiles.length) {\n        setMessage(config.labelDropzoneNoFilesAccepted);\n        setState(\"error\");\n        return;\n      }\n\n      acceptedFiles.forEach((file) => {\n        const reader = new FileReader();\n\n        reader.onabort = () => {\n          reset();\n          setMessage(config.labelDropzoneAborted);\n          setState(\"error\");\n        };\n        reader.onerror = () => {\n          reset();\n          setMessage(config.labelDropzoneError);\n          setState(\"error\");\n        };\n        reader.onload = () => {\n          setFileBase64(reader.result.toString().split(\"base64,\")[1]);\n          setState(\"success\");\n        };\n        reader.readAsDataURL(file);\n      });\n\n      setImage(\n        acceptedFiles.map((file) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          }),\n        )[0],\n      );\n    },\n  });\n\n  const reset = () => {\n    if (image) URL.revokeObjectURL(image.preview);\n    setFileBase64(\"\");\n  };\n\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks, will run on unmount\n    return () => reset();\n  }, []);\n\n  const onClear = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    acceptedFiles.length = 0;\n    acceptedFiles.splice(0, acceptedFiles.length);\n    inputRef.current.value = \"\";\n    setImage(null);\n    setState(\"initial\");\n    setMessage(\"\");\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        data-action=\"remove-entry\"\n        onClick={onClear}\n        style={{ display: \"none\" }}\n      />\n      <div {...getRootProps({ className: \"dropzone\" })} data-state={state}>\n        <input {...getInputProps()} />\n        <textarea\n          name={id}\n          style={{ display: \"none\" }}\n          data-filename={acceptedFiles?.[0]?.name}\n          value={fileBase64}\n          readOnly\n        />\n\n        {acceptedFiles.length > 0 ? (\n          <>\n            {IS_IMAGE && image && (\n              <img\n                style={{\n                  maxWidth: 240,\n                }}\n                key={image.name}\n                src={image.preview}\n                onLoad={() => {\n                  URL.revokeObjectURL(image.preview);\n                }}\n              />\n            )}\n            {!IS_IMAGE &&\n              acceptedFiles.map((file) => <p key={file.name}>{file.name}</p>)}\n            <p className=\"dropzone__label\">\n              <span>{config.labelDropzoneReplaceFile}</span>{\" \"}\n              {config.labelDropzoneDragDrop}\n            </p>\n          </>\n        ) : (\n          <>\n            <p className=\"dropzone__label\">\n              <span>{config.labelDropzoneUpload}</span>{\" \"}\n              {config.labelDropzoneDragDrop}\n            </p>\n            <p className=\"dropzone__info\">\n              {maxFileSize &&\n                `${config.labelDropzoneMaxSize} ${Math.floor(\n                  maxFileSize / 1000000,\n                )}Mb. Acceptable file types .\n              ${supportedFileTypes.join(\", .\")}.`}\n            </p>\n          </>\n        )}\n\n        {state === \"loading\" && (\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <style\n              dangerouslySetInnerHTML={{\n                __html: `\n                .spinner_b2T7{animation:spinner_xe7Q .8s linear infinite}.spinner_YRVV{animation-delay:-.65s}.spinner_c9oY{animation-delay:-.5s}@keyframes spinner_xe7Q{93.75%,100%{r:3px}46.875%{r:.2px}}`,\n              }}\n            />\n            <circle className=\"spinner_b2T7\" cx=\"4\" cy=\"12\" r=\"3\" />\n            <circle\n              className=\"spinner_b2T7 spinner_YRVV\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"3\"\n            />\n            <circle\n              className=\"spinner_b2T7 spinner_c9oY\"\n              cx=\"20\"\n              cy=\"12\"\n              r=\"3\"\n            />\n          </svg>\n        )}\n\n        {message && <p className=\"dropzone__message\">{message}</p>}\n      </div>\n    </>\n  );\n};\n\nexport default UploadField;\n","type ButtonProps = {\n  onClick?: () => void;\n  theme?: \"primary\" | \"secondary\" | \"tertiary\" | \"ghost\";\n  type?: \"button\" | \"submit\" | \"reset\";\n  children?: React.ReactNode;\n  style?: React.CSSProperties;\n  size?: \"md\" | \"lg\";\n  disabled?: boolean;\n  className?: string;\n};\n\nexport const Button: React.ComponentType<ButtonProps> = ({\n  onClick,\n  theme = \"primary\",\n  type = \"button\",\n  size = \"md\",\n  children,\n  style,\n  disabled,\n  className = \"\",\n  ...props\n}) => {\n  return (\n    <button\n      type={type}\n      onClick={onClick}\n      className={`button button--${theme} button--${size} button--${\n        disabled ? \"disabled\" : \"enabled\"\n      } ${className}`}\n      style={style}\n      disabled={disabled}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n","import { useContext, useRef } from \"react\";\nimport { Button } from \"./Button\";\nimport { ConfigContext } from \"./ConfigContext\";\n\ntype FieldsetProps = {\n  name?: string;\n  children: React.ReactNode;\n  displayClearButton?: boolean;\n};\nexport const Fieldset: React.ComponentType<FieldsetProps> = ({\n  name,\n  children,\n  displayClearButton = true,\n}) => {\n  const config = useContext(ConfigContext);\n  const fieldsetRef = useRef(null);\n\n  const onClear = () => {\n    const inputs = fieldsetRef.current.querySelectorAll(\n      \"input, textarea, select\",\n    );\n\n    inputs.forEach((input) => {\n      if (input.type === \"checkbox\" || input.type === \"radio\") {\n        input.checked = false;\n      } else {\n        input.value = \"\";\n      }\n      input.dispatchEvent(new Event(\"change\"));\n    });\n\n    const removeComplexMultipleEntries = fieldsetRef.current.querySelectorAll(\n      '[data-action=\"remove-entry\"]',\n    );\n    removeComplexMultipleEntries.forEach((button) => {\n      button.click();\n    });\n  };\n\n  return (\n    <fieldset className=\"form-fieldset\" ref={fieldsetRef}>\n      {name && (\n        <legend className=\"form-legend\">\n          <span className=\"form-legend__title\">{name}</span>\n          {displayClearButton && (\n            <span className=\"form-legend__clear\">\n              <Button type=\"button\" theme=\"ghost\" onClick={onClear}>\n                {config.iconClear()}\n                {config.labelClear}\n              </Button>\n            </span>\n          )}\n        </legend>\n      )}\n      {children}\n    </fieldset>\n  );\n};\n","import { useContext, useReducer, useRef, useState } from \"react\";\nimport { Field } from \"./Field\";\nimport { ConfigContext } from \"./ConfigContext\";\nimport * as Dialog from \"@radix-ui/react-dialog\";\nimport * as VisuallyHidden from \"@radix-ui/react-visually-hidden\";\nimport { Fieldset } from \"./Fieldset\";\nimport { Button } from \"./Button\";\n\ntype ActionType = {\n  id: string;\n  type: \"add\" | \"remove\" | \"edit\";\n  data?: Record<string, FieldValueType>;\n};\n\ntype FieldValueType = {\n  key: string;\n  value: string;\n  label: string;\n};\n\nexport const ComplexMultiple: React.ComponentType<WorkableField> = ({\n  id,\n  required,\n  label,\n  fields,\n}) => {\n  const config = useContext(ConfigContext);\n  const [state, setState] = useState<\"initial\" | \"dialog\">(\"initial\");\n\n  const formRef = useRef<HTMLFormElement>(null);\n\n  const hiddenValueFieldRef = useRef<HTMLInputElement>(null);\n  const [editingEntryId, setEditingEntryId] = useState<string | null>(null);\n\n  const entryId = useRef<number>(0);\n\n  /**\n   * entries is an array of objects that looks like this:\n   * [{\n   *  id: \"entry-1\",\n   *  type: \"add\",\n   *  data: {\n   *  \"entry-1\": {\n   *    key: \"firstname\",\n   *    value: \"John\",\n   *    label: \"First Name\"\n   * }]\n   */\n\n  const [entries, updateEntries] = useReducer((data, action: ActionType) => {\n    const index = data.findIndex(({ id }) => id === action.id);\n    let newData = [...data];\n\n    switch (action.type) {\n      case \"add\":\n        return [...data, action];\n\n      case \"remove\":\n        newData.splice(index, 1);\n        return newData;\n\n      case \"edit\":\n        newData.splice(index, 1, action);\n        return newData;\n    }\n  }, []);\n\n  /**\n   * Save when the 'save' button is clicked\n   * it can either be a 'save' or an 'edit' action\n   */\n\n  const onSave = () => {\n    if (!hiddenValueFieldRef.current) return;\n    if (!formRef) return;\n\n    const formData = new FormData(formRef.current);\n    const data = Object.fromEntries(formData.entries());\n\n    const action: ActionType = !editingEntryId\n      ? {\n          id: `entry-${++entryId.current}`,\n          type: \"add\",\n          data: {},\n        }\n      : {\n          id: editingEntryId,\n          type: \"edit\",\n          data: {},\n        };\n\n    Object.entries(data).forEach(([key, value]: [string, string]) => {\n      const matchingField = fields.find((f) => f.id === key);\n\n      if (!value.trim().length) return;\n      action.data[key] = {\n        key: key,\n        value,\n        label: matchingField.label,\n      };\n    });\n    updateEntries(action);\n    setState(\"initial\");\n    setEditingEntryId(null);\n  };\n\n  return (\n    <>\n      <input\n        type=\"hidden\"\n        name={id}\n        value={JSON.stringify(entries)}\n        ref={hiddenValueFieldRef}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n          updateEntries(JSON.parse(e.target.value))\n        }\n      />\n      {Boolean(entries.length) && (\n        <div className=\"complex-multiple__entries\">\n          {(entries as ActionType[]).map((entry) => {\n            return (\n              <div key={entry.id} className=\"complex-multiple__entry\">\n                <table className=\"complex-multiple__entry-table\">\n                  <tbody>\n                    {Object.entries(entry.data).map(\n                      ([key, value]: [string, FieldValueType]) => (\n                        <tr key={key}>\n                          <th>{value.label}</th>\n                          {value.value === \"on\" ? (\n                            <td>{config.iconCheck()}</td>\n                          ) : (\n                            <td>{value.value}</td>\n                          )}\n                        </tr>\n                      ),\n                    )}\n                  </tbody>\n                </table>\n\n                <div className=\"complex-multiple__entry-actions\">\n                  <Button\n                    type=\"button\"\n                    theme=\"ghost\"\n                    onClick={() => {\n                      setEditingEntryId(entry.id);\n                      setState(\"dialog\");\n                    }}\n                  >\n                    {config.iconEdit()}\n                    <VisuallyHidden.Root>\n                      {config.labelEdit}\n                    </VisuallyHidden.Root>\n                  </Button>\n\n                  <Button\n                    type=\"button\"\n                    theme=\"ghost\"\n                    data-action=\"remove-entry\"\n                    onClick={() =>\n                      updateEntries({\n                        id: entry.id,\n                        type: \"remove\",\n                      })\n                    }\n                  >\n                    {config.iconDelete()}\n                    <VisuallyHidden.Root>\n                      {config.labelDelete}\n                    </VisuallyHidden.Root>\n                  </Button>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n\n      <div className=\"complex-multiple__add\">\n        <Button type=\"button\" onClick={() => setState(\"dialog\")}>\n          {config.labelAdd}\n        </Button>\n      </div>\n\n      <Dialog.Root open={state === \"dialog\"}>\n        <Dialog.Portal>\n          <Dialog.Overlay className=\"dialog-overlay\" />\n          <Dialog.Content\n            className=\"dialog-content application-form-dialog\"\n            onEscapeKeyDown={() => setState(\"initial\")}\n            onPointerDownOutside={() => setState(\"initial\")}\n            onInteractOutside={() => setState(\"initial\")}\n          >\n            <div className=\"dialog-content__form\">\n              <VisuallyHidden.Root asChild>\n                <Dialog.Title className=\"dialog-title\">\n                  {editingEntryId ? config.labelEdit : config.labelAdd}\n                </Dialog.Title>\n              </VisuallyHidden.Root>\n\n              <Button\n                aria-label={config.labelClose}\n                onClick={() => setState(\"initial\")}\n                theme=\"tertiary\"\n                className=\"dialog-content__close\"\n              >\n                {config.iconCancel()}\n              </Button>\n\n              <form className=\"complex-multiple__form\" ref={formRef}>\n                <Fieldset name={label} displayClearButton={false}>\n                  {fields.map((subfield) => {\n                    const editingEntry = {\n                      ...entries.find(({ id }) => id === editingEntryId),\n                    };\n                    return (\n                      <Field\n                        key={subfield.id}\n                        name={subfield.id}\n                        field={{\n                          ...subfield,\n                          defaultValue:\n                            editingEntryId && editingEntry\n                              ? editingEntry.data[subfield.id]?.value\n                              : null,\n                        }}\n                      />\n                    );\n                  })}\n\n                  <div className=\"button-row\">\n                    <Button type=\"button\" onClick={() => onSave()}>\n                      {config.labelSave}\n                    </Button>\n\n                    <Button\n                      type=\"button\"\n                      theme=\"tertiary\"\n                      onClick={() => {\n                        setEditingEntryId(null);\n                        setState(\"initial\");\n                      }}\n                    >\n                      {config.labelCancel}\n                    </Button>\n                  </div>\n                </Fieldset>\n              </form>\n            </div>\n          </Dialog.Content>\n        </Dialog.Portal>\n      </Dialog.Root>\n    </>\n  );\n};\n\nexport default ComplexMultiple;\n","import { FormField } from \"./FormField\";\n\nexport const SelectField: React.ComponentType<WorkableField> = ({\n  required,\n  id,\n  options,\n  defaultValue,\n}) => {\n  return (\n    <FormField>\n      <select\n        className=\"form-field__select\"\n        name={id}\n        required={required}\n        id={`workable-${id}`}\n        defaultValue={defaultValue}\n      >\n        <option value={null}></option>\n        {options?.map((choice) => {\n          return (\n            <option key={choice.name} value={choice.name}>\n              {choice.value}\n            </option>\n          );\n        })}\n      </select>\n    </FormField>\n  );\n};\n","export const ChoiceField: React.ComponentType<WorkableField> = ({\n  id,\n  options,\n  singleOption,\n  defaultValue,\n}) => {\n  return (\n    <fieldset className=\"form-field__choice-fieldset\">\n      {options?.map((choice) => {\n        return (\n          <div className=\"form-field__choice-wrapper\" key={choice.name}>\n            <input\n              type={singleOption ? \"radio\" : \"checkbox\"}\n              name={id}\n              id={`${id}${choice.name}`}\n              value={choice.name}\n              className=\"form-field__choice\"\n              defaultChecked={\n                Array.isArray(defaultValue)\n                  ? defaultValue.includes(choice.name)\n                  : defaultValue === choice.name\n              }\n            />\n            <label htmlFor={`${id}${choice.name}`}>{choice.value}</label>\n          </div>\n        );\n      })}\n    </fieldset>\n  );\n};\n","import React = require(\"react\");\nimport { Label } from \"./Label\";\nimport { Toggle } from \"./Toggle\";\nimport { TextField } from \"./TextField\";\nimport { TextAreaField } from \"./TextAreaField\";\nimport { FormItem } from \"./FormItem\";\nimport { DateField } from \"./DateField\";\nimport { NumberField } from \"./NumberField\";\n\nimport { TelephoneField } from \"./TelephoneField\";\nimport { UploadField } from \"./UploadField\";\nimport { ComplexMultiple } from \"./ComplexMultipleField\";\nimport { SelectField } from \"./SelectField\";\nimport { ChoiceField } from \"./ChoiceField\";\n\nexport type FieldProps = {\n  name: string;\n  field: WorkableField;\n};\n\nexport const Field: React.ComponentType<FieldProps> = ({ name, field }) => {\n  if (!field) {\n    console.log(`Missing field: ${name}`);\n    return null;\n  }\n\n  let Component;\n\n  switch (field.type) {\n    case \"paragraph\":\n      Component = () => <TextAreaField {...field} />;\n      break;\n\n    case \"file\":\n      Component = () => <UploadField {...field} />;\n      break;\n\n    case \"boolean\":\n      Component = () => <Toggle {...field} />;\n      break;\n\n    case \"date\":\n      Component = () => <DateField {...field} />;\n      break;\n\n    case \"multiple\":\n      Component = () => <ChoiceField {...field} />;\n      break;\n\n    case \"dropdown\":\n      Component = () => <SelectField {...field} />;\n      break;\n\n    case \"number\":\n      Component = () => <NumberField {...field} />;\n      break;\n\n    case \"group\":\n      Component = () => <ComplexMultiple {...field} />;\n      break;\n\n    default:\n      Component = () => <TextField {...field} />;\n  }\n\n  if (field.id === \"phone\") {\n    Component = () => <TelephoneField {...field} />;\n  }\n\n  if (field.type === \"boolean\") {\n    return <FormItem>{Component && <Component />}</FormItem>;\n  }\n\n  return (\n    <FormItem>\n      <Label label={field.label} id={field.id} required={field.required} />\n      {Component && <Component />}\n      {field.helper && <p className=\"form-helper\">{field.helper}</p>}\n    </FormItem>\n  );\n};\n","type ButtonRowProps = {\n  children?: React.ReactNode;\n};\n\nexport const ButtonRow: React.ComponentType<ButtonRowProps> = ({\n  children,\n}) => {\n  return <div className=\"button-row\">{children}</div>;\n};\n","type HeadingProps = {\n  children?: React.ReactNode;\n  as?: \"h1\" | \"h2\" | \"h3\" | \"h4\" | \"h5\" | \"h6\";\n};\n\nexport const Heading: React.ComponentType<HeadingProps> = ({\n  children,\n  as = \"h2\",\n}) => {\n  const Element = as;\n  return <Element className={`heading heading--${as}`}>{children}</Element>;\n};\n","import React = require(\"react\");\n\nimport { ConfigContext } from \"./ConfigContext\";\nimport { Heading } from \"./Heading\";\n\ntype FormProps = {\n  children: React.ReactNode;\n  onSubmit(\n    event: React.FormEvent<HTMLFormElement>,\n    cb: (error: string | null) => void,\n  ): void;\n};\n\nexport const Form: React.ComponentType<FormProps> = ({\n  children,\n  onSubmit,\n}) => {\n  const [state, setState] = React.useState<\n    \"initial\" | \"saving\" | \"error\" | \"complete\"\n  >(\"initial\");\n\n  const [error, setError] = React.useState<string | null>(null);\n  const config = React.useContext(ConfigContext);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    setState(\"saving\");\n    setError(null);\n    onSubmit(event, (error: string | null) => {\n      if (error) {\n        setError(error);\n        setState(\"error\");\n      } else {\n        setState(\"complete\");\n      }\n    });\n  };\n\n  return (\n    <form\n      className={`form--${state}`}\n      onSubmit={handleSubmit}\n      encType=\"multipart/form-data\"\n    >\n      {config.labelForm && <Heading as=\"h1\">{config.labelForm}</Heading>}\n      {children}\n      <p\n        className={`form__error ${error ? \"enabled\" : \"disabled\"}`}\n        onClick={() => setError(null)}\n      >\n        {error}\n      </p>\n    </form>\n  );\n};\n","/**\n * Clean form data\n * - checkboxes are stored as \"on\" or \"off\"\n * - complex fields are stored as json\n */\n\nexport const cleanFormData = (data: any) => {\n  const cleanedData: any = {};\n  Object.keys(data).forEach((key) => {\n    let value = data[key];\n\n    // parse complex fields that are already stored as json\n    try {\n      value = JSON.parse(value);\n    } catch (e) {}\n\n    // arrays\n    if (Array.isArray(value)) {\n      cleanedData[key] = value.map((item) => {\n        if (typeof item === \"object\" && item !== null) {\n          if (\"value\" in value) {\n            return cleanValue(value.value);\n          }\n\n          if (\"data\" in item) {\n            const cleanedData: any = {};\n            Object.keys(item.data).forEach((key) => {\n              cleanedData[key] = cleanValue(item.data[key].value);\n            });\n            return cleanedData;\n          }\n\n          return cleanFormData(item);\n        }\n        return cleanValue(item);\n      });\n      return;\n    }\n\n    cleanedData[key] = cleanValue(value);\n  });\n\n  return cleanedData;\n};\n\n/**\n * Clean value\n * - empty values are removed\n * - checkboxes are stored as boolean\n */\n\nexport const cleanValue = (value: any) => {\n  // empty values\n  if (typeof value === \"string\" && value.trim().length === 0) {\n    return;\n  }\n\n  // checkboxes\n  if (value === \"on\" || value === \"off\") {\n    return value === \"on\" ? true : false;\n  }\n\n  return value;\n};\n\n/**\n * Create workable candidate from form data\n * based on field types in formFields and questions\n */\n\nexport const createWorkableCandidate = (\n  data: any,\n  allFields: WorkableField[],\n) => {\n  const candidate: WorkableCandidate = {\n    name: data.name,\n    firstname: data.firstname,\n    lastname: data.lastname,\n    email: data.email,\n    headline: data.headline,\n    summary: data.summary,\n    address: data.address,\n    phone: data.phone ? `+${data.phone_dialcode}${data.phone}` : undefined,\n    cover_letter: data.cover_letter,\n    education_entries: data.education,\n    experience_entries: data.experience,\n    answers: [],\n    skills: data.skills,\n    tags: data.tags,\n    disqualified: data.disqualified,\n    disqualification_reason: data.disqualification_reason,\n    disqualified_at: data.disqualified_at,\n    social_profiles: data.social_profiles,\n    domain: data.domain,\n    recruiter_key: data.recruiter_key,\n  };\n\n  // find questions that are not yet in the object\n  const missingQuestions = allFields.filter(\n    (question) => !Object.keys(candidate).includes(question.id),\n  );\n\n  // add answers;\n  missingQuestions.forEach((question) => {\n    const value = data[question.id];\n\n    if (value) {\n      switch (question.type) {\n        case \"text\":\n        case \"email\":\n        case \"phone\":\n        case \"paragraph\":\n          const shortTextAnswer: WorkableAnswerShortText = {\n            question_key: question.id,\n            body: value,\n          };\n          candidate.answers.push(shortTextAnswer);\n          break;\n\n        case \"multiple\":\n          const multipleChoiceAnswer: WorkableAnswerMultipleChoice = {\n            question_key: question.id,\n            choices: [value],\n          };\n          candidate.answers.push(multipleChoiceAnswer);\n          break;\n\n        case \"boolean\":\n          const booleanAnswer: WorkableAnswerBoolean = {\n            question_key: question.id,\n            checked: value,\n          };\n          candidate.answers.push(booleanAnswer);\n          break;\n\n        case \"dropdown\":\n          const dropdownAnswer: WorkableAnswerDropdown = {\n            question_key: question.id,\n            choices: [value],\n          };\n          candidate.answers.push(dropdownAnswer);\n          break;\n\n        case \"date\":\n          const dateAnswer: WorkableAnswerDate = {\n            question_key: question.id,\n            date: value,\n          };\n          candidate.answers.push(dateAnswer);\n          break;\n\n        case \"number\":\n          const numericAnswer: WorkableAnswerNumeric = {\n            question_key: question.id,\n            value: +value,\n          };\n          candidate.answers.push(numericAnswer);\n          break;\n\n        case \"file\":\n          const fileAnswer: WorkableAnswerFileData = {\n            question_key: question.id,\n            file: {\n              name: question.id,\n              data: value,\n            },\n          };\n          candidate.answers.push(fileAnswer);\n          break;\n      }\n    }\n  });\n\n  // remove undefined values\n  Object.keys(candidate).forEach((key) =>\n    candidate[key] === undefined ? delete candidate[key] : {},\n  );\n\n  return candidate;\n};\n","import React = require(\"react\");\nimport { ConfigContext, DEFAULT_FORM_CONFIG } from \"./ConfigContext\";\nimport { Field } from \"./Field\";\nimport { Fieldset } from \"./Fieldset\";\nimport { Button } from \"./Button\";\nimport { ButtonRow } from \"./ButtonRow\";\nimport { Form } from \"./Form\";\nimport { cleanFormData, createWorkableCandidate } from \"./utils\";\n\ntype ApplicationFormProps = {\n  config?: FormConfigType;\n  form?: WorkableFieldset[];\n  onSave?: (\n    data: WorkableCandidate,\n    cb: (error?: string | null) => void,\n  ) => void;\n};\n\nexport const ApplicationForm: React.ComponentType<ApplicationFormProps> = ({\n  config = {},\n  form = [],\n  onSave = () => {},\n}) => {\n  const allFields: WorkableField[] = form.reduce((acc, fieldset) => {\n    return [...acc, ...fieldset.fields];\n  }, []);\n\n  const handleSubmit = (\n    event: React.FormEvent<HTMLFormElement>,\n    cb: (error?: string | null) => void,\n  ) => {\n    event.preventDefault();\n    const formData = new FormData(event.currentTarget);\n    const entries: any = Object.fromEntries(formData.entries());\n    const allValues: any = {};\n    Object.keys(entries).forEach((key) => {\n      const question = allFields.find((q) => q.id === key);\n      if (question?.type === \"multiple\" || question?.type === \"dropdown\") {\n        allValues[key] = formData.getAll(key);\n      } else {\n        allValues[key] = formData.get(key);\n      }\n    });\n\n    const cleanData: any = cleanFormData(allValues);\n\n    const workableCandidate: WorkableCandidate = createWorkableCandidate(\n      cleanData,\n      allFields,\n    );\n\n    onSave(workableCandidate, (error) => {\n      if (error) {\n        cb(error);\n      } else {\n        cb();\n      }\n    });\n\n    return false;\n  };\n\n  return (\n    <div className=\"application-form\">\n      <ConfigContext.Provider value={{ ...DEFAULT_FORM_CONFIG, ...config }}>\n        <Form onSubmit={handleSubmit}>\n          {form.map((fieldset) => (\n            <Fieldset name={fieldset.name} key={fieldset.name}>\n              {fieldset.fields.map((field) => (\n                <Field key={field.id} name={field.id} field={field} />\n              ))}\n            </Fieldset>\n          ))}\n          <Fieldset>\n            <ButtonRow>\n              <Button type=\"submit\" size=\"lg\" style={{ width: \"100%\" }}>\n                {config.labelSubmit || DEFAULT_FORM_CONFIG.labelSubmit}\n              </Button>\n            </ButtonRow>\n          </Fieldset>\n        </Form>\n      </ConfigContext.Provider>\n    </div>\n  );\n};\n"],"names":["$46371591ef975b7f$export$3f655c770124f5e3","telephoneInitialCountry","telephonePreferredCountries","telephoneAllowDropdown","telephoneAutoHideDialCode","telephoneAutoPlaceholder","telephoneCustomContainer","telephoneCustomPlaceholder","telephoneDropdownContainer","telephoneExcludeCountries","telephoneFormatOnDisplay","telephoneGeoIpLookup","telephoneHiddenInput","telephoneLocalizedCountries","telephoneNationalMode","telephoneOnlyCountries","telephonePlaceholderNumberType","telephoneSeparateDialCode","labelForm","labelSubmit","labelAdd","labelSave","labelCancel","labelEdit","labelDelete","labelClose","labelOptional","labelClear","labelDropzoneUpload","labelDropzoneDragDrop","labelDropzoneMaxSize","labelDropzoneAcceptableFileTypes","labelDropzoneReplaceFile","labelDropzoneNoFilesAccepted","labelDropzoneAborted","labelDropzoneError","iconCancel","$4FLPu$reactjsxruntime","jsx","viewBox","fill","xmlns","width","height","d","stroke","strokeWidth","iconCheck","iconEdit","jsxs","iconDelete","iconClear","$46371591ef975b7f$export$a92f85ab3e9ad68b","$4FLPu$react","createContext","$0b181d47ed69cae8$export$b04be29aa201d4f5","label","required","id","config","useContext","className","htmlFor","$2aa09ed41b960c53$export$bea8ebba691c5813","defaultValue","type","name","defaultChecked","Boolean","$c4f26462bdfd8192$export$56e87bf42978147a","children","$8f728dfe91be7728$export$d1f826a06de665f2","count","maxLength","$2ec2b2615757c602$export$2c73285ae9390cec","value","setValue","useState","onChange","e","target","length","$5530faebb81017b1$export$301bf6213f61d17f","rows","$fed4c326da8dd110$export$6713ee24224a3285","$f0b54e4fac0798ec$export$d9781c7894a82487","$1207f4e6d4f3dfe5$export$63c5fa0b2fdccd2e","$6a387c6d0a95ddc1$export$bbb9a9f0dc629995","inputRef","useRef","dialCode","setDialCode","useEffect","current","iti","$4FLPu$intltelinput","initialCountry","allowDropdown","autoHideDialCode","autoPlaceholder","customContainer","customPlaceholder","dropdownContainer","excludeCountries","formatOnDisplay","geoIpLookup","hiddenInput","localizedCountries","nationalMode","onlyCountries","placeholderNumberType","preferredCountries","separateDialCode","utilsScript","onCountryChange","countryData","getSelectedCountryData","addEventListener","ref","readOnly","$92cb36c8aa41f29f$export$d61c19f03375c53e","supportedFileTypes","maxFileSize","IS_IMAGE","filter","x","includes","state","setState","image","setImage","message","setMessage","fileBase64","setFileBase64","acceptedFiles","getRootProps","getInputProps","$4FLPu$reactdropzone","useDropzone","maxFiles","multiple","maxSize","accept","map","ext","onDrop","forEach","file","reader","FileReader","onabort","reset","onerror","onload","result","toString","split","readAsDataURL","Object","assign","preview","URL","createObjectURL","revokeObjectURL","Fragment","onClick","preventDefault","splice","style","display","maxWidth","src","onLoad","Math","floor","join","dangerouslySetInnerHTML","__html","cx","cy","r","$91b9aad5a64c1a48$export$353f5b6fc5456de1","theme","size","disabled","props","$51b1b21d0f089fd2$export$e154be390aa0e14","displayClearButton","fieldsetRef","querySelectorAll","input","checked","dispatchEvent","Event","button","click","$aabbac4c6e41489a$export$e8c699c108165025","fields","formRef","hiddenValueFieldRef","editingEntryId","setEditingEntryId","entryId","entries","updateEntries","useReducer","data","action","index","findIndex","newData","JSON","stringify","parse","entry","key","$4FLPu$radixuireactvisuallyhidden","Root","$4FLPu$radixuireactdialog","open","Portal","Overlay","Content","onEscapeKeyDown","onPointerDownOutside","onInteractOutside","asChild","Title","subfield","editingEntry","find","$83cda72e4a349305$export$a455218a85c89869","field","formData","FormData","fromEntries","matchingField","f","trim","onSave","$e92f6eb09d0fcfe6$export$d55b50a564d0b931","options","choice","$797e730d1d4d77a6$export$fc4f3719f31d1e79","singleOption","Array","isArray","console","log","Component","helper","$5263deb48f373351$export$564cbe3426fc093a","$5982914be01221fb$export$a8a3e93435678ff9","as","Element","$6952fa8d42b24858$export$a7fed597f4b8afd8","onSubmit","error","setError","event","encType","$533342404bccfdc5$export$9ede6ba874448640","cleanedData","keys","item","$533342404bccfdc5$export$33f062f47f21a01","$533342404bccfdc5$export$7a4712243be385f2","allFields","candidate","firstname","lastname","email","headline","summary","address","phone","phone_dialcode","undefined","cover_letter","education_entries","education","experience_entries","experience","answers","skills","tags","disqualified","disqualification_reason","disqualified_at","social_profiles","domain","recruiter_key","question","shortTextAnswer","question_key","body","push","multipleChoiceAnswer","choices","booleanAnswer","dropdownAnswer","dateAnswer","date","numericAnswer","fileAnswer","$196f026530850a63$export$60413e28724d3abd","form","reduce","acc","fieldset","Provider","cb","currentTarget","allValues","q","getAll","get","cleanData","workableCandidate"],"version":3,"file":"main.js.map"}