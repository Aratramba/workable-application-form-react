.toggle-wrapper {
  display: flex;
  gap: 10px;
  align-items: flex-start;
}

.toggle {
  align-items: center;
  grid-column-gap: 1rem;
  column-gap: 1rem;
  cursor: pointer;
  display: grid;
  grid-auto-flow: column;
  width: -moz-fit-content;
  width: fit-content;
  position: relative;
}

.toggle--disabled {
  cursor: not-allowed;
}

.toggle__input {
  all: unset;
  outline-color: var(--border-focus-color);
  background-color: var(--toggle-inactive-color);
  border-radius: 0.8125rem;
  cursor: pointer;
  flex-shrink: 0;
  height: 1.625rem;
  position: relative;
  transition-duration: 0.2s;
  transition-property: border-color, outline-color, background-color;
  transition-timing-function: cubic-bezier(0.2, 0.07, 0.38, 1);
  width: 3rem;
}

.toggle__input:after {
  content: "";
  height: 1.375rem;
  left: 0.125rem;
  position: absolute;
  top: 0.125rem;
  width: 1.375rem;
  background-color: #fff;
  border-radius: 50%;
  transform: translateX(0);
  transition: transform 0.2s cubic-bezier(0.2, 0.07, 0.38, 1);
}

.toggle__input:checked:after {
  transform: translateX(1.375rem);
}

.toggle__input:disabled:after,
.toggle__input[disabled]:after {
  background-color: #f3f4f4;
}

.toggle__check {
  content: "";
  height: 1.375rem;
  left: 0.125rem;
  position: absolute;
  top: 0.125rem;
  width: 1.375rem;
  opacity: 0;
  transform: translateX(0) scale(0.5) rotate(-30deg);
  transition-duration: 0.2s;
  transition-property: opacity, transform;
  transition-timing-function: cubic-bezier(0.2, 0.07, 0.38, 1);
  z-index: 1;
  color: var(--toggle-active-color);
  display: grid;

  svg {
    width: 1.1rem;
    height: 1.1rem;
    place-self: center;
    transform: translateX(1px);
  }
}

.toggle__input:checked ~ .toggle__check {
  opacity: 1;
  transform: translateX(1.375rem) scale(1) rotate(0);
}

.toggle__input:focus-visible {
  outline: 0.125rem solid var(--toggle-active-color);
  outline-offset: 0.125rem;
}

@supports (-webkit-hyphens: none) {
  .toggle__input:focus,
  .toggle__input:focus-within {
    outline: none;
    position: relative;
  }
  .toggle__input:focus-within ~ .toggle__check,
  .toggle__input:focus ~ .toggle__check {
    border-radius: 1rem;
    bottom: -0.25rem;
    left: -0.25rem;
    position: absolute;
    right: -0.25rem;
    top: -0.25rem;
    border: 0.125rem solid var(--toggle-active-color);
    content: "";
    opacity: 1;
  }
}

@media not all and (-webkit-min-device-pixel-ratio: 0),
  not all and (min-resolution: 0.001dpcm) {
  @supports (-webkit-appearance: none) and (stroke-color: transparent) {
    .toggle__input:focus,
    .toggle__input:focus-within {
      outline: none;
      position: relative;
    }
    .toggle__input:focus-within ~ .toggle__check,
    .toggle__input:focus ~ .toggle__check {
      border-radius: 1rem;
      bottom: -0.25rem;
      left: -0.25rem;
      position: absolute;
      right: -0.25rem;
      top: -0.25rem;
      border: 0.125rem solid var(--toggle-active-color);
      content: "";
      opacity: 1;
    }
  }
}

.toggle__input:focus-visible,
.toggle__input:hover:not(:disabled, [disabled], :checked) {
  border-color: var(--toggle-active-color);
}

.toggle__input:focus,
.toggle__input:hover {
  background-color: #90939d;
}

.toggle__input:active {
  background-color: #595d6a;
}

.toggle__input:checked,
.toggle__input:checked:focus,
.toggle__input:checked:hover {
  background-color: var(--toggle-active-color);
}

.toggle__input:checked:active {
  background-color: #005465;
}

.toggle__input:disabled,
.toggle__input[disabled] {
  background-color: #dddee1;
  cursor: not-allowed;
}
